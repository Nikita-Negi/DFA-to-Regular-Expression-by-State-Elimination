Any regular language can be expressed in three forms: regular expression, regular grammar (production rules) and finite automata. In this project, we focus on deterministic finite automata and regular expression, specifically, the conversion process from the former to the latter. The method we are implementing is called “state elimination”, where all non-start and non-final states are eliminated by converting all related transitions to corresponding regular expressions, until one final regular expression remains for the transition from the start/initial state to the final/accepting state, and this is the equivalent of that DFA, and the required end-product of the project.
